// Generated by view binder compiler. Do not edit!
package com.example.autoclick.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.autoclick.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnClearMarker;

  @NonNull
  public final Button btnGetCoordinates;

  @NonNull
  public final Button btnOpenSettings;

  @NonNull
  public final Button btnScheduleClick;

  @NonNull
  public final Button btnStopClick;

  @NonNull
  public final EditText etClickCount;

  @NonNull
  public final EditText etClickInterval;

  @NonNull
  public final EditText etHour;

  @NonNull
  public final EditText etMillisecond;

  @NonNull
  public final EditText etMinute;

  @NonNull
  public final EditText etRandomRange;

  @NonNull
  public final EditText etSecond;

  @NonNull
  public final LinearLayout layoutInterval;

  @NonNull
  public final TextView tvCoordinates;

  @NonNull
  public final TextView tvStatus;

  private ActivityMainBinding(@NonNull ScrollView rootView, @NonNull Button btnClearMarker,
      @NonNull Button btnGetCoordinates, @NonNull Button btnOpenSettings,
      @NonNull Button btnScheduleClick, @NonNull Button btnStopClick,
      @NonNull EditText etClickCount, @NonNull EditText etClickInterval, @NonNull EditText etHour,
      @NonNull EditText etMillisecond, @NonNull EditText etMinute, @NonNull EditText etRandomRange,
      @NonNull EditText etSecond, @NonNull LinearLayout layoutInterval,
      @NonNull TextView tvCoordinates, @NonNull TextView tvStatus) {
    this.rootView = rootView;
    this.btnClearMarker = btnClearMarker;
    this.btnGetCoordinates = btnGetCoordinates;
    this.btnOpenSettings = btnOpenSettings;
    this.btnScheduleClick = btnScheduleClick;
    this.btnStopClick = btnStopClick;
    this.etClickCount = etClickCount;
    this.etClickInterval = etClickInterval;
    this.etHour = etHour;
    this.etMillisecond = etMillisecond;
    this.etMinute = etMinute;
    this.etRandomRange = etRandomRange;
    this.etSecond = etSecond;
    this.layoutInterval = layoutInterval;
    this.tvCoordinates = tvCoordinates;
    this.tvStatus = tvStatus;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_clear_marker;
      Button btnClearMarker = ViewBindings.findChildViewById(rootView, id);
      if (btnClearMarker == null) {
        break missingId;
      }

      id = R.id.btn_get_coordinates;
      Button btnGetCoordinates = ViewBindings.findChildViewById(rootView, id);
      if (btnGetCoordinates == null) {
        break missingId;
      }

      id = R.id.btn_open_settings;
      Button btnOpenSettings = ViewBindings.findChildViewById(rootView, id);
      if (btnOpenSettings == null) {
        break missingId;
      }

      id = R.id.btn_schedule_click;
      Button btnScheduleClick = ViewBindings.findChildViewById(rootView, id);
      if (btnScheduleClick == null) {
        break missingId;
      }

      id = R.id.btn_stop_click;
      Button btnStopClick = ViewBindings.findChildViewById(rootView, id);
      if (btnStopClick == null) {
        break missingId;
      }

      id = R.id.et_click_count;
      EditText etClickCount = ViewBindings.findChildViewById(rootView, id);
      if (etClickCount == null) {
        break missingId;
      }

      id = R.id.et_click_interval;
      EditText etClickInterval = ViewBindings.findChildViewById(rootView, id);
      if (etClickInterval == null) {
        break missingId;
      }

      id = R.id.et_hour;
      EditText etHour = ViewBindings.findChildViewById(rootView, id);
      if (etHour == null) {
        break missingId;
      }

      id = R.id.et_millisecond;
      EditText etMillisecond = ViewBindings.findChildViewById(rootView, id);
      if (etMillisecond == null) {
        break missingId;
      }

      id = R.id.et_minute;
      EditText etMinute = ViewBindings.findChildViewById(rootView, id);
      if (etMinute == null) {
        break missingId;
      }

      id = R.id.et_random_range;
      EditText etRandomRange = ViewBindings.findChildViewById(rootView, id);
      if (etRandomRange == null) {
        break missingId;
      }

      id = R.id.et_second;
      EditText etSecond = ViewBindings.findChildViewById(rootView, id);
      if (etSecond == null) {
        break missingId;
      }

      id = R.id.layout_interval;
      LinearLayout layoutInterval = ViewBindings.findChildViewById(rootView, id);
      if (layoutInterval == null) {
        break missingId;
      }

      id = R.id.tv_coordinates;
      TextView tvCoordinates = ViewBindings.findChildViewById(rootView, id);
      if (tvCoordinates == null) {
        break missingId;
      }

      id = R.id.tv_status;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      return new ActivityMainBinding((ScrollView) rootView, btnClearMarker, btnGetCoordinates,
          btnOpenSettings, btnScheduleClick, btnStopClick, etClickCount, etClickInterval, etHour,
          etMillisecond, etMinute, etRandomRange, etSecond, layoutInterval, tvCoordinates,
          tvStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
